{"version":3,"sources":["axios.js","components/Row.js","components/Nav.js","requests.js","components/Banner.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMoives","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","src","poster_path","backdrop_path","alt","name","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","id","videoId","opts","height","width","palyerVars","autoplay","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPostion","original_name","class","overview","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c630342e.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL :  \"https://api.themoviedb.org/3\",\r\n});\r\n\r\n\r\nexport default instance;\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from '../axios';\r\nimport './Row.css'\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst baseImgUrl = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({title,fetchUrl,isLargeRow}) {\r\n    const [movies, setMoives] = useState([]);\r\n    const [trailerUrl,setTrailerUrl] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n\r\n            const request = await axios.get(fetchUrl)\r\n            setMoives(request.data.results)\r\n           \r\n            return request\r\n        }\r\n        fetchData()\r\n\r\n    },[fetchUrl])\r\n\r\n\r\n    \r\n    const opts = {\r\n        height: \"390\",\r\n        width :\"100%\",\r\n        palyerVars : {\r\n            autoplay: 1,\r\n        }\r\n    }\r\n\r\n    const handleClick = (movie) =>{\r\n        if (trailerUrl) {\r\n            setTrailerUrl(\"\");\r\n\r\n        } else {\r\n            movieTrailer(movie?.name || \"\")\r\n            .then((url) =>{\r\n\r\n                const urlParams = new URLSearchParams(new URL(url).search)\r\n                setTrailerUrl(urlParams.get(\"v\"));\r\n            }\r\n            )\r\n            .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n      return (\r\n\r\n        <div className = \"row\">\r\n           <h2>{title}</h2> \r\n\r\n           <div className = \"row_posters\">\r\n\r\n               {movies.map(movie => (\r\n                   <img \r\n                    key={movie.id}\r\n                    className = {`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                    src ={ `${baseImgUrl}${isLargeRow ? movie.poster_path: movie.backdrop_path}`} alt = {movie.name}\r\n                    onClick={() => handleClick(movie)}/>\r\n               ))}\r\n\r\n           </div>\r\n           {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row ","import React , {useState,useEffect} from 'react'\r\nimport './Nav.css'\r\n\r\n\r\n\r\nfunction Nav() {\r\n    \r\n    const [ show, handleShow] = useState(false);\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\",()=>{\r\n\r\n            if (window.scrollY > 100) {\r\n                handleShow(true);\r\n\r\n            } else handleShow(false);\r\n            \r\n\r\n        }\r\n        )\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n\r\n        }\r\n    },[]);\r\n   \r\n\r\n    return (\r\n        <div className = {`nav ${show && \"nav_black\"}`}>\r\n            <img className = \"nav_logo\"\r\n            src = \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\r\n            alt = \"Netflix logo\"\r\n            />\r\n\r\n            <img\r\n             className=\"nav_avatar\"\r\n             src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n            alt=\"Avatar\"\r\n             />\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Nav","const API_KEY =  \"89bda6db46e9274a38a97a2f19eff879\"\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\nexport default requests;\r\n\r\n\r\n\r\n","\r\nimport React,{useState,useEffect} from 'react'\r\nimport axios from '../axios'\r\nimport requests from '../requests'\r\nimport './Banner.css'\r\nfunction Banner(){\r\n\r\n    const [movie,setMovie] = useState([])\r\n\r\n\r\n    useEffect(() =>{\r\n        async function fetchData() {\r\n            const request  = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(\r\n                request.data.results[\r\n                    Math.floor(Math.random() * request.data.results.length-1)\r\n                ]\r\n            )\r\n            return request ;\r\n        }\r\n\r\n        fetchData();\r\n    },[])\r\n\r\n    function truncate(str,n) {\r\n        return str?.length>n ? str.substr(0,n-1) + \"...\":str;\r\n    }\r\n\r\n    console.log(movie)\r\n    return (\r\n        <header className = \"banner\"\r\n            style = {{\r\n                backgroundSize : \"cover\",\r\n                backgroundImage :`url(\r\n                    \"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\"\r\n                )`,\r\n                backgroundPostion : \"center center\"\r\n            }}>\r\n            <div className = \"banner_contents\">\r\n                <h1 className = \"banner_title\">\r\n                    {movie ?. title || movie ?.name || movie.original_name}\r\n                </h1>\r\n                <div className = \"banner_buttons\">\r\n                    <button className = \"banner_button\">Like</button>\r\n                    <button className = \"banner_button\">PlayList</button>\r\n                </div>\r\n              \r\n                <h1 class = \"banner_description\">{movie?.overview}</h1>\r\n                </div> \r\n                < div className = \"banner_fadder\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner","import React from \"react\";\nimport \"./App.css\";\nimport Row from \"./components/Row\";\nimport Nav from \"./components/Nav\";\nimport Banner from \"./components/Banner\";\nimport requests from \"./requests\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* Navbar */}\n      <Nav />\n\n      {/* Banner */}\n      <Banner />\n\n      {/* Rows */}\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}